name: Deploy to Production

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set lowercase repository owner
        run: |
          echo "REPO_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set version tag
        run: |
          echo "VERSION_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/pingaroo/backend:${{ env.VERSION_TAG }}
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/pingaroo/backend:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/pingaroo/frontend:${{ env.VERSION_TAG }}
            ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/pingaroo/frontend:latest
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set lowercase repository owner
        run: |
          echo "REPO_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set version tag
        run: |
          echo "VERSION_TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Create deployment directory
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            mkdir -p /opt/pingaroo
            chmod 755 /opt/pingaroo

      - name: Copy docker-compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: "docker-compose.yml"
          target: "/opt/pingaroo"
          strip_components: 0

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd /opt/pingaroo
            echo "REGISTRY=${{ env.REGISTRY }}" > .env
            echo "BACKEND_IMAGE=${{ env.REPO_OWNER }}/pingaroo/backend" >> .env
            echo "FRONTEND_IMAGE=${{ env.REPO_OWNER }}/pingaroo/frontend" >> .env
            echo "IMAGE_TAG=${{ env.VERSION_TAG }}" >> .env
            docker-compose down
            docker-compose pull
            docker-compose up -d 